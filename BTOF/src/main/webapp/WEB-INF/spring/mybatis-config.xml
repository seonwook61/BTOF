<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
	
	<!-- SQL문을 처리시 NULL값이 올때 통합처리 세팅해놓은것.
		통합처리를 하지 않고 개별 데이터에 하나씩 처리하기 위해서는 
		#{id, jdbcType=VARCHAR} #{age, jdbcType=INTEGER} ... 이런식으로 매번 작성해줘야함. 
		vo/dto : int age => 0 
				Integer age => (null) 
	 -->
	<settings>
		<setting name="jdbcTypeForNull" value="NULL"/>
	</settings>

	<!-- mapper.xml에서 resultType에 작성하는 vo같은 클래스 이름이 길다.
		별칭달아서 짧게 써보자 --> 
	
	<typeAliases>
		<typeAlias type="com.product.domain.LikeDTO" alias="likeDTO"/>
		<typeAlias type="com.product.domain.BoardRankDTO" alias="boardRankDTO"/>
		<typeAlias type="com.product.domain.ProductVO" alias="productVO"/>
		<typeAlias type="com.member.domain.MemberVO" alias="memberVO"/>      
		<typeAlias type="com.member.domain.CashFlowRecordVO" alias="cashFlowRecordVO"/>      
		<typeAlias type="com.member.domain.AccountInfoVO" alias="accountInfoVO"/>		
		<typeAlias type="com.artist.domain.ArtistVO" alias="artistVO"/>
		<typeAlias type="com.product.domain.SellStatusVO" alias="SellStatusVO"/>
		<typeAlias type="com.product.domain.SellVO" alias="SellVO"/>
		<typeAlias type="com.common.domain.MainVO" alias="MainVO"/>
		<typeAlias type="com.admin.domain.ProductVO" alias="AproductVO"/>
		<typeAlias type="com.board.domain.InquiryVO" alias="InquiryVO"/>
		<typeAlias type="com.member.domain.WishListVO" alias="wishListVO"/>		
		
	</typeAliases>

	








</configuration>